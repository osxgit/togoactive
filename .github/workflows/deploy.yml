name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Configure PHP 8.1
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extensions: mbsting, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, yml
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          check-latest: true
      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: 5

      - name: Deployment started
        run: |
          echo "Deployment started ..."
          # Enter maintenance mode or return true
          # if already is in maintenance mode
          (php artisan down) || true
          # Pull the latest version of the app
          git fetch origin main
          git reset --hard origin/main
          # Install composer dependencies
          echo "Install composer dependencies"
          composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
          # Re-generate app key
          php artisan key:generate
          # Install npm dependencies
          echo "Install npm dependencies"
          npm ci --prefer-offline --no-audit
          echo "Compile assets for production"
          npm run production
          # Run database migrations
          php artisan migrate --force
          # Note: If you're using queue workers, this is the place to restart them.
          # TODO restart queue workers
          # Clear the old cache
          php artisan clear-compiled
          # Recreate cache
          php artisan optimize
          # Compile npm assets
          npm run prod
          # Reload PHP to update opcache
          echo "" | sudo -S service php8.1-fpm reload
          # Reload redis-server to update cache
          sudo service redis-server restart
          # Exit maintenance mode
          php artisan up
          echo "Deployment finished!"
